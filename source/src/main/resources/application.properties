# Properties that are used by this application
# Generally spring boot properties can be used, commented out here are the ones most likely to be used.

#  Port the server is running on.
server.port = 8099
server.forward-headers-strategy=FRAMEWORK

spring.flyway.default-schema = auth

#  Database, should be supplied on a per-application basis
# spring.datasource.url=jdbc:postgresql://localhost/aerius_authorization
# spring.datasource.username=
# spring.datasource.password=

#  Properties used to configure the authorization server
#  Issuer to use when constructing tokens. Can be used to add https explicitly if this isn't added, for instance with our traefik setup on dev
# aerius.authorization.server.issuer = https://base_url

#  Properties used to configure the Register application as a client.
#  ID of the client application (should match what is used in Register)
# aerius.authorization.clients.register.id = register-client
#  Secret used by the client application (should match what is used in Register)
# aerius.authorization.clients.register.secret = {noop}registerssecret
#  List of URLs that can be used as a redirect by the client. If URL is not in the list, redirect won't happen when authorizing.
# aerius.authorization.clients.register.redirecturi = http://url1/authorized, http://url2/authorized

#  Properties used to configure login (authentication) mechanisms
#  Using local users and a form to login, default true
# aerius.authorization.formlogin=true
#  Using links to other identity providers, requiring client.registration and client.provider properties as well, default false
# aerius.authorization.federation=false
#  Spring properties to configure identity provider(s), 
#spring.security.oauth2.client.provider.[PROVIDER_ID].issuer-uri=https://correct-issuer-uri
#spring.security.oauth2.client.registration.[REGISTRATION_ID].provider=[PROVIDER_ID]
#spring.security.oauth2.client.registration.[REGISTRATION_ID].client-name=Some recognizable name for a user
#spring.security.oauth2.client.registration.[REGISTRATION_ID].client-id=The correct ID, as is configured in the identity provider
#spring.security.oauth2.client.registration.[REGISTRATION_ID].client-secret=The correct secret, as is configured in the identity provider
#spring.security.oauth2.client.registration.[REGISTRATION_ID].authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.[REGISTRATION_ID].redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.[REGISTRATION_ID].scope=openid,profile

#  Cors properties
# aerius.cors.allowedorigins = http://localhost:[*], http://127.0.0.1:[*]
